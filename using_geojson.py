# -*- coding: utf-8 -*-
"""Using geojson.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bfpHi_YsM4rQ6lXosMPkRQTb4qvrOLgB

**Import our moduels**
"""

#!pip3 install geopandas

#import requests, pandas , io, json, csv, geopandas
#from google.colab import drive
import pandas, json, geopandas
from datetime import datetime

'''
"""**Get credentials**"""

drive.mount('/content/drive/', force_remount=True) #get all drive files
file_path = "/content/drive/My Drive/DigiLocal/Colab Notebooks/credentials.txt"
credential = open(file_path, 'r').readlines() # put each line as a value in a list 
username, password = credential[0].rstrip(), credential[1].rstrip()
drive.flush_and_unmount()

"""**Get data**"""

url = "https://daac.ornl.gov/daacdata/global_soil/SRDB_V5/data/srdb-data-V5.csv"
with requests.Session() as session:
    session.auth = (username, password)
    r1 = session.request('get', url)
    r = session.get(r1.url, auth=(username, password))
    data = r.content


"""**Place Data in pandas df and format**"""
'''

df = pandas.read_csv('srdb-data-V5.csv')[['Latitude', 'Longitude', 'Study_midyear', 'Study_number', 'Rs_annual']].dropna().astype(str)
df['Study_midyear'] = [(int(datetime.strptime(row[0:4]+'-06-01', '%Y-%m-%d').timestamp() * 1000)) for row in df['Study_midyear']]
df.drop([i for i in range(0, 28)]).to_csv('test.csv') #drop rows not formated propaly to save time and save data

"""**Create pandas df containing data for gejson**"""

geometry = pandas.DataFrame().assign(**{'coordinates' : df[['Latitude', 'Longitude']].values.tolist(),
                                        'ID' : df['Study_number'],\
                                        'type': 'Point'})

"""remove duplicate id so we only modify first ocurence of coordinate under each id"""

geometry.sort_values("ID", inplace = True)
geometry.drop_duplicates(subset = "ID", keep = False, inplace = True)

def df_to_geojson(df, properties):
    geojson = {'type':'FeatureCollection', 'features':[]}
    for _, row in df.iterrows():
        feature = {'type':'Feature',
                    'properties':{},
                    }
        for prop in properties:
            feature['properties'][prop] = row[prop]
        geojson['features'].append(feature)
    return geojson

cols = ['Latitude', 'Longitude']
geojson = df_to_geojson(df, cols)

filename = 'dataset_geo.json'
with open(filename, 'w') as file:
    json.dump(geojson, file, indent=2)
file.close

from shapely import wkt; wkt.loads("POINT EMPTY")

with open(filename) as file:
    new_geojson=geopandas.read_file(file)
file.close

new_geojson.head(10)

new_geojson.plot()
print(new_geojson)
print('still good')